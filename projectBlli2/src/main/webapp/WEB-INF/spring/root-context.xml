<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<context:component-scan base-package="kr.co.blli">
	<context:exclude-filter type="annotation" 
		expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<context:component-scan base-package="org.springframework.security.crypto.bcrypt"/>
	<bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" autowire="default"/>
	
	<!-- model 계층 빈 설정 , AOP설정 비워둠 -->

	<!-- dataSource -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName">
			<value>oracle.jdbc.driver.OracleDriver</value>
		</property>
		<property name="url">
			<value>jdbc:oracle:thin:@127.0.0.1:1521:xe</value>
		</property>
		<property name="username">
			<value>scott</value>
		</property>
		<property name="password">
			<value>tiger</value>
		</property>
		<property name="maxActive">
			<value>30</value>
		</property>
	</bean>
	<!-- MyBatis 연동 설정 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation"
			value="classpath:mybatis/config/SqlSessionConfig.xml"/>
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"></constructor-arg>
	</bean>
	<!-- 트랜잭션 설정 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
       <property name="dataSource" ref="dataSource"/>
	</bean>    
	<tx:annotation-driven transaction-manager="transactionManager"/>
		
	<!-- 스프링 시큐리티 설정 -  -->
	<bean id="blliAuthenticationProvider" class="kr.co.blli.model.security.BlliAuthenticationProvider"/>
	<bean id="blliUserDetailsService" class="kr.co.blli.model.security.BlliUserDetailsService"/>
	<bean id="persistentTokenRepository" 
	class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider ref="blliAuthenticationProvider"/>
	</security:authentication-manager>

 
	<!-- 스프링 시큐리트 설정 - 유알엘 패턴에 따른 접근 권한 제한 , 로그인 및 로그아웃 폼 커스터마이징 -->
	<security:http use-expressions="true">
		<security:intercept-url pattern="/admin_*" access="hasAuthority('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/member_*" access="hasAnyAuthority('ROLE_USER_KAKAO','ROLE_USER_EMAIL','ROLE_ADMIN','ROLE_USER_NAVER')" requires-channel=""/>
		<security:intercept-url pattern="/memberjoin_*" access="hasAnyAuthority('ROLE_RESTRICTED_KAKAO','ROLE_RESTRICTED_EMAIL','ROLE_ADMIN','ROLE_RESTRICTED_NAVER')"/>
		<security:intercept-url pattern="/**" access="permitAll"/>
		<security:form-login
			username-parameter="memberId"
			password-parameter="memberPassword"
			login-page="/authorityCheck.do"
			default-target-url="/member_proceedingToMain.do"
			authentication-failure-url="/authorityCheck.do?loginFail=true"
		/>                
		<security:logout
			invalidate-session="true"
			logout-success-url="/index.do"
			delete-cookies="JSESSIONID"
		/>
		<security:remember-me services-ref="rememberMeServices" key="blli" authentication-success-handler-ref="blliAuthenticationSuccessHandler"/>
	</security:http>	
		<bean id="blliAuthenticationSuccessHandler" class="kr.co.blli.model.security.BlliAuthenticationSuccessHandler"/>
	  <bean id="rememberMeServices"
	   class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices"> 
	   <property name="tokenRepository" ref="persistentTokenRepository" /> 
	   <property name="userDetailsService" ref="blliUserDetailsService" /> 
	   <property name="key" value="blli" /> 
	   <property name="alwaysRemember" value="true" /> 
	   </bean> 
	   
	<!-- velocity 설정 -->
	<bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath" value="WEB-INF/velocity" />
	</bean>
	
	<!-- mailSender 설정 -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="defaultEncoding" value="utf-8" />
		<property name="username" value="dha8312@gmail.com" />
		<property name="password" value="asdf1020!@" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtp.auth">true</prop>
			</props>
		</property>
	</bean>
</beans>
