<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="posting"> 
 
 	<resultMap type="blliPostingVO" id="bpvRM">
 		<result property="postingUrl" column="posting_url"/>
 		<result property="postingTitle" column="posting_title"/>
 		<result property="postingSummary" column="posting_summary"/>
 		<result property="postingContent" column="posting_content"/>
 		<result property="postingScore" column="posting_score"/>
 		<result property="postingLikeCount" column="posting_like_count"/>
 		<result property="postingDislikeCount" column="posting_dislike_count"/>
 		<result property="postingMediaCount" column="posting_media_count"/>
 		<result property="postingPhotoLink" column="posting_photo_link"/>
 		<result property="postingTotalResidenceTime" column="posting_total_residence_time"/>
 		<result property="postingViewCount" column="posting_view_count"/>
 		<result property="postingScrapeCount" column="posting_scrape_count"/>
 		<result property="postingAuthor" column="posting_author"/>
 		<result property="postingDate" column="posting_date"/>
 		<result property="postingOrder" column="posting_order"/>
 		<result property="postingReplyCount" column="posting_reply_count"/>
 		<result property="smallProduct" column="small_product"/>
 		<result property="smallProductId" column="small_product_id"/>
 	</resultMap>
 	
 	<select id="countOfPostingUrl" resultType="int">
 		select count(posting_url) from blli_posting where posting_url = #{postingUrl}
 	</select>
 	
 	<select id="getPostingStatus" resultType="String">
 		select posting_status from blli_posting where posting_url = #{postingUrl}
 	</select>
 	
 	<select id="getAllPostingStatus" resultType="String">
 		select posting_status from blli_posting where posting_url = #{postingUrl}
 	</select>
 	
 	<update id="updatePosting">
 		update blli_posting set posting_title = #{postingTitle}, posting_photo_link = #{postingPhotoLink}, posting_media_count = #{postingMediaCount},
 		posting_content = #{postingContent}, posting_summary = #{postingSummary}, posting_author = #{postingAuthor}, 
 		posting_date = #{postingDate}, posting_order = #{postingOrder}, posting_reply_count = #{postingReplyCount} 
 		where posting_url = #{postingUrl} and small_product = #{smallProduct}
 	</update>
 	
 	<insert id="insertPosting">
 		insert into blli_posting(small_product_id, posting_url, small_product, posting_title, posting_photo_link, posting_media_count, posting_content, posting_summary,
 		posting_author, posting_date, posting_order, posting_reply_count, posting_status)
 		values(#{smallProductId}, #{postingUrl}, #{smallProduct}, #{postingTitle}, #{postingPhotoLink}, #{postingMediaCount}, #{postingContent}, #{postingSummary},
 		#{postingAuthor}, #{postingDate}, #{postingOrder}, #{postingReplyCount}, 'unconfirmed')
 	</insert>

	<select id="searchJsoupTest" resultMap="bpvRM">
		select bp.posting_url, bp.posting_title, bp.posting_photo_link, bp.posting_summary, bp.posting_score, bp.small_product, bp.posting_scrape_count, 
		bp.posting_like_count, bp.posting_dislike_count, bp.posting_author, to_char(bp.posting_date,'YYYY.MM.DD') as posting_date from(
			select count(*) over (partition by b.posting_url) as small_product_count, b.posting_url from(		
				select posting_url from blli_posting where small_product like '%' || #{searchWord} || '%'
			)p, blli_posting b where b.posting_url = p.posting_url 
		)sp, blli_posting bp where sp.small_product_count = 1 and sp.posting_url = bp.posting_url
	</select>
	
	<select id="postingListWithSmallProducts" resultMap="bpvRM">
		select * from(
			select ceil(row_num/5) as page, posting_url, posting_title, small_product from(
				select (dense_rank() over (order by posting_url)) row_num, posting_url, posting_title, small_product from(
					select count(*) over (partition by posting_url) as small_product_count, posting_url, posting_title, small_product from blli_posting where posting_status = 'unconfirmed'
				) where small_product_count > 1 order by posting_url
			)
		) where page = #{pageNo}
	</select>
	
	<select id="searchProducts" resultType="String">
		select small_product from blli_posting where posting_url = #{postingUrl}
	</select>
	
	<update id="deleteProduct">
		update blli_posting set posting_status = 'dead' where posting_url = #{postingUrl} and posting_status = 'unconfirmed'
	</update>
	
	<update id="selectProduct">
		update blli_posting set posting_status = 'confirmed' where posting_url = #{postingUrl} and small_product = #{smallProduct}
	</update>
	
	<select id="totalPostingWithProducts" resultType="int">
		select count(distinct(posting_url)) from(
			select count(*) over (partition by posting_url) as small_product_count, posting_url from blli_posting where posting_status = 'unconfirmed'
		) where small_product_count > 1
	</select>
	
	<update id="deletePosting">
		update blli_posting set posting_status = 'dead' where posting_url = #{postingUrl}
	</update>
	
 </mapper> 		
 
 
 
 
 
 
 
 
 
 
 
 
 
















